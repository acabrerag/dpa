#+Title:     Data Pipeline
#+Author:    Adolfo De Unánue
#+Email:     adolfo.deunanue@itam.mx
#+DATE:      2017
#+DESCRIPTION: General discussion about the issues to be solve in order to build the product
#+KEYWORDS:  datank product 
#+LANGUAGE:  en

#+STARTUP: beamer
#+STARUP: oddeven

#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [presentation, smaller]

#+BEAMER_THEME: DarkConsole

#+OPTIONS: H:1 toc:nil 

#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport

#+COLUMNS: %20ITEM %13BEAMER_env(Env) %6BEAMER_envargs(Args) %4BEAMER_col(Col) %7BEAMER_extra(Extra)



* Data

#+ATTR_ORG: :width 600px :height 600px
#+ATTR_HTML: :width 800px :height 600px
#+ATTR_LATEX: :height 150px :width 200px
[[./imagenes/data-data-everywhere.jpg]]

* Immutability

#+BEGIN_QUOTE
An immutable object is an object whose state cannot be modified after it is created

*Source* [[https://en.wikipedia.org/wiki/Immutable_object][Wikipedia]]
#+END_QUOTE

Simple, right?

* Data immutability

We must handle our data as immutable:

- Every observation is about a event in the past
- It cannot be changed!
  - At least that you /actually/ believe in [[https://en.wikipedia.org/wiki/Retrocausality#cite_note-38][retrocausality]]

- You can always go back to the source if something breaks

- Every transformation creates a new data set
  - In this way, you can always track your steps (/Data linage/)

* Data pipeline

- If you accept the previous slide, the next step is think about how to
  transform the data along the way

- You need to think in transformations

* Data repository

Once that you have decided about the transformations in a very functional way 

  - ¿Cómo se guardarán los datos?
    - Capa de almacenamiento
    - Formatos de archivos
    - Formatos de compresión

  - ¿Diseño de esquema de datos?
  - ¿Cómo se gestionarán los metadatos?
  - ¿Cómo se administrará la seguridad?
    - Autenticación, cifrado, acceso controlado.

* Data linage

- El *linaje* de los datos indica el origen de los mismos (/data provenance/) y dónde/como se mueve 
  con el tiempo. 

- Incluye que le pasa a los datos a través de los diversos procesos de
  transformación

- Permite explicar los resultados y detectar errores

- Se puede dar al nivel de registro o a nivel de fuente de datos.

* Data Governace

- Auditoría
  - Todos los eventos deben de ser trazables (/traceable/) con el linaje
    (/linage/) apropiado
- Transparencia
- Reproducibilidad
- Consistencia

* Data Governance

- Metadata
- Semántica
- Ontología

* Technical Metadata

- Nombre de la fuente
- Nombre de la base de datos
- Nombre de la columna
- Tipo de dato 
- Fecha de creación
- Fecha de modificación
- Versión de código
- Versión de infraestructura

* Business Metadata

- Nombre de negocio
- Definición de negocio
- Clasificación de negocio
- Etiquetas
- Etiquetas /sensibles/

* Operational Metadata

- Acceso
- Información de los /jobs/
- Logs
- /Audit trails/
- Locación

* Data Storage

#+ATTR_ORG: :width 600px :height 600px
#+ATTR_HTML: :width 800px :height 600px
#+ATTR_LATEX: :height 150px :width 200px
[[./imagenes/graph-databases-for-beginners-nosql-databases.jpg]]

*Source*: [[https://neo4j.com/blog/why-nosql-databases/][Graph Databases for Beginners: Why We Need NOSQL Databases =Neo4J=]] 

* A suggested pipeline for data 

- raw
- clean-types
- deduplicación
- consolidación
- fix-missing
- clean-all
- anonimización
- derived-variables
- semantic
- new features

* The usual suspects: Formatos

* Pesadilla en la calle del infierno

[[./imagenes/BRNcanQCIAAk5vZ.jpg]]

*Source*: [[http://timoelliott.com/blog/analytics-cartoons][TimoElliott.com]]

* Available File Formats

- Text

- JSON

- =SequenceFile=
  - binary key/value pair format
  
- Avro

- Parquet

- ORC
  - optimized row columnar format

* CSV

- *Comma separated values*
- Sirve para datos que se pueden acomodar en una tabla.
- Es excelente para acceso *secuencial* a los datos.
  - Cuando el archivo es muy grande, considerar procesar *bulk* y no línea por línea.
- Se puede partir en pedacitos y sigue funcionando.
- No sirve para datos que no estén en formato rectangular.
- No se describe así misma...
  - Y no es estándar su creación.
- Separadores, *headers*, ~encoding~, escapes raros, etc...

* CSV

- Yo recomiendo usar como separador el *pipe*: ~|~.
  - Terminación ~psv~.
  - El problema es que las personas en Office en Mac, probablemente sufran...
- Poner siempre el ~header~.


* CSV: ~PostgreSQL~ (desde ~psql~)

#+begin_src sql :eval never
\copy (select * from foo) to '/algun_archivo.psv' with header csv delimiter '|'
#+end_src

* Ejemplos: CSV

#+begin_example text
nombre, apellido, fecha

Adolfo, De Unanue, 04/02/1978
#+end_example

* XML

- *eXtensible Markup Languague*
- Los datos se validan contra la estructura.
- La descripción de los datos es parte de los datos.
  - i.e. tienen un *esquema*.
- Súper *verbose*.
- Es posible convertir a cualquier tipo de archivo desde aquí.
- Recorrerlo puede ser doloroso.
- Se puede usar como **fuente de la verdad**.
  - Interoperación


* Ejemplos: XML

#+begin_example xml
<xml>
<profesor>
  <nombre>
    <nombre> Adolfo </nombre>
    <apellidos>
      <paterno>De Unánue</paterno>
      <materno>Tiscareño</materno>
    </apellidos>
  </nombre>
  <nacimiento>
    <fecha>04/02/1978</fecha>
    <lugar></lugar>
  </nacimiento>
</profesor>
</xml>
#+end_example

* Ejemplos: XML

Otro ejemplo el *CFDI*:

#+BEGIN_EXAMPLE xml
<cfdi:Comprobante xmlns:cfdi="http://www.sat.gob.mx/cfd/3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.sat.gob.mx/cfd/3 cfdv3.xsd" version="3.0" fecha="2010-03-06T20:38:12" sello="tOSe+Ex/wvn33YlGwtfmrJwQ31Crd7lI9VcH63TGjHfxk5vfb3q9uSbDUGk9TXvo70ydOpikRVw+9B2Six0mbu3PjoPpO909oAYITrRyomdeUGJ4vmA2/12L86EJLWpU7vIt4cL8HpkEw7TOFhSdpzb/890+jP+C1adBsHU1VHc=" total="488.50" subTotal="488.50" certificado="MIIE/TCCA+WgAwIBAgIUMzAwMDEwMDAwMDAxMDAwMDA4MDAwDQYJKoZIhvcNAQEFBQAwggFvMRgwFgYDVQQDDA9BLkMuIGRlIHBydWViYXMxLzAtBgNVBAoMJlNlcnZpY2lvIGRlIEFkbWluaXN0cmFjacOzbiBUcmlidXRhcmlhMTgwNgYDVQQLDC9BZG1pbmlzdHJhY2nDs24gZGUgU2VndXJpZGFkIGRlIGxhIEluZm9ybWFjacOzbjEpMCcGCSqGSIb3DQEJARYaYXNpc25ldEBwcnVlYmFzLnNhdC5nb2IubXgxJjAkBgNVBAkMHUF2LiBIaWRhbGdvIDc3LCBDb2wuIEd1ZXJyZXJvMQ4wDAYDVQQRDAUwNjMwMDELMAkGA1UEBhMCTVgxGTAXBgNVBAgMEERpc3RyaXRvIEZlZGVyYWwxEjAQBgNVBAcMCUNveW9hY8OhbjEVMBMGA1UELRMMU0FUOTcwNzAxTk4zMTIwMAYJKoZIhvcNAQkCDCNSZXNwb25zYWJsZTogSMOpY3RvciBPcm5lbGFzIEFyY2lnYTAeFw0xMDA3MzAxNjU4NDBaFw0xMjA3MjkxNjU4NDBaMIGWMRIwEAYDVQQDDAlNYXRyaXogU0ExEjAQBgNVBCkMCU1hdHJpeiBTQTESMBAGA1UECgwJTWF0cml6IFNBMSUwIwYDVQQtExxBQUEwMTAxMDFBQUEgLyBBQUFBMDEwMTAxQUFBMR4wHAYDVQQFExUgLyBBQUFBMDEwMTAxSERGUlhYMDExETAPBgNVBAsMCFVuaWRhZCAxMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDD0ltQNthUNUfzq0t1GpIyapjzOn1W5fGM5G/pQyMluCzP9YlVAgBjGgzwYp9Z0J9gadg3y2ZrYDwvv8b72goyRnhnv3bkjVRKlus6LDc00K7Jl23UYzNGlXn5+i0HxxuWonc2GYKFGsN4rFWKVy3Fnpv8Z2D7dNqsVyT5HapEqwIDAQABo4HqMIHnMAwGA1UdEwEB/wQCMAAwCwYDVR0PBAQDAgbAMB0GA1UdDgQWBBSYodSwRczzj5H7mcO3+mAyXz+y0DAuBgNVHR8EJzAlMCOgIaAfhh1odHRwOi8vcGtpLnNhdC5nb2IubXgvc2F0LmNybDAzBggrBgEFBQcBAQQnMCUwIwYIKwYBBQUHMAGGF2h0dHA6Ly9vY3NwLnNhdC5nb2IubXgvMB8GA1UdIwQYMBaAFOtZfQQimlONnnEaoFiWKfU54KDFMBAGA1UdIAQJMAcwBQYDKgMEMBMGA1UdJQQMMAoGCCsGAQUFBwMCMA0GCSqGSIb3DQEBBQUAA4IBAQArHQEorApwqumSn5EqDOAjbezi8fLco1cYES/PD+LQRM1Vb1g7VLE3hR4S5NNBv0bMwwWAr0WfL9lRRj0PMKLorO8y4TJjRU8MiYXfzSuKYL5Z16kW8zlVHw7CtmjhfjoIMwjQo3prifWxFv7VpfIBstKKShU0qB6KzUUNwg2Ola4t4gg2JJcBmyIAIInHSGoeinR2V1tQ10aRqJdXkGin4WZ75yMbQH4L0NfotqY6bpF2CqIY3aogQyJGhUJji4gYnS2DvHcyoICwgawshjSaX8Y0Xlwnuh6EusqhqlhTgwPNAPrKIXCmOWtqjlDhho/lhkHJMzuTn8AoVapbBUn" formaDePago="PAGO EN UNA SOLA EXHIBICION" noCertificado="30001000000100000800" tipoDeComprobante="ingreso">
<cfdi:Emisor rfc="PPL961114GZ1" nombre="PHARMA PLUS SA DE CV">
<cfdi:DomicilioFiscal pais="Mexico" calle="AV. RIO MIXCOAC" estado="MEXICO, D.F." colonia="ACACIAS" municipio="BENITO JUAREZ" noExterior="No. 140" codigoPostal="03240"/>
<cfdi:ExpedidoEn pais="Mexico" calle="AV. UNIVERSIDAD" estado="DISTRITO FEDERAL" colonia="OXTOPULCO" noExterior="1858" codigoPostal="03910"/>
</cfdi:Emisor>
<cfdi:Receptor rfc="PEPJ8001019Q8" nombre="JUAN PEREZ PEREZ">
<cfdi:Domicilio pais="Mexico" calle="AV UNIVERSIDAD" estado="DISTRITO FEDERAL" colonia="COPILCO UNIVERSIDAD" municipio="COYOACAN" noExterior="16 EDF 3" noInterior="DPTO 101" codigoPostal="04360"/>
</cfdi:Receptor>
<cfdi:Conceptos>
<cfdi:Concepto unidad="CAPSULAS" importe="244.00" cantidad="1.0" descripcion="VIBRAMICINA 100MG 10" valorUnitario="244.00"/>
<cfdi:Concepto unidad="BOTELLA" importe="137.93" cantidad="1.0" descripcion="CLORUTO 500M" valorUnitario="137.93"/>
<cfdi:Concepto unidad="TABLETAS" importe="84.50" cantidad="1.0" descripcion="SEDEPRON 250MG 10" valorUnitario="84.50"/>
</cfdi:Conceptos>
<cfdi:Impuestos totalImpuestosTrasladados="22.07">
<cfdi:Traslados>
<cfdi:Traslado tasa="0.00" importe="0.00" impuesto="IVA"/>
<cfdi:Traslado tasa="16.00" importe="22.07" impuesto="IVA"/>
</cfdi:Traslados>
</cfdi:Impuestos>
<cfdi:Complemento>
<tfd:TimbreFiscalDigital xmlns:tfd="http://www.sat.gob.mx/TimbreFiscalDigital" xsi:schemaLocation="http://www.sat.gob.mx/TimbreFiscalDigital TimbreFiscalDigital.xsd" selloCFD="tOSe+Ex/wvn33YlGwtfmrJwQ31Crd7lI9VcH63TGjHfxk5vfb3q9uSbDUGk9TXvo70ydOpikRVw+9B2Six0mbu3PjoPpO909oAYITrRyomdeUGJ4vmA2/12L86EJLWpU7vIt4cL8HpkEw7TOFhSdpzb/890+jP+C1adBsHU1VHc=" FechaTimbrado="2010-03-06T20:40:10" UUID="ad662d33-6934-459c-a128-bdf0393e0f44" noCertificadoSAT="30001000000100000801" version="1.0" selloSAT="j5bSpqM3w0+shGtImqOwqqy6+d659O78ckfstu5vTSFa+2CVMj6Awfr18x4yMLGBwk6ruYbjBlVURodEIl6nJIhTTUtYQV1cbRDG9kvvhaNAakxqaSOnOx79nHxqFPRVoqh10CsjocS9PZkSM2jz1uwLgaF0knf1g8pjDkLYwlk="/>
</cfdi:Complemento>
<cfdi:Addenda/>
</cfdi:Comprobante>
#+END_EXAMPLE


* JSON

- *JavaScript Object Notation*
- Es Javascript (en realidad es **Javascript**)
- Formato de serialización para =HTTP= y =Javascript=
- Es texto
- El esquema está completamente integrado con los datos 
- Súper popular entre los desarrolladores.
- Más rápido que *parsear* que un ~XML~.
- Es orientado a renglones (/Row-oriented/)
- Se puede accesar secuencialmente.
- *Verbose*
- No tiene validación.
- Fácil de *subir* a bases de datos *no-relacionales*
  - Como ~MongoDB~, etc.
- Y a bases de datos *relacionales*
  - Como =PostgreSQL=
- Muy fácil de usar con ~python~

* Ejemplo: JSON


#+begin_example json
  {
  "nombre": "Adolfo De Unánue"
  "fecha_nacimiento": "04/02/1978"
  }
#+end_example

* Avro

- Es el formato /cross-lamguage/ usado en =Apache Hadoop=
  - Los datos son descritos usando un esquema independiente del lenguaje
  - En JSON, y los datos son codificados en formato binario
- Su meta principal es la evolución del esquema
  - Los esquemas cambian en el tiempo 
- El esquema está separado de los datos
  - Y está en el encabezado
- Es orientado a renglones
- Soporta compresión
- Es divisible
- Almacena el esquema en el encabezado de cada archivo.
- Soporta compresión con =snappy=.
- Es recomendable usarlo en la ingesta de datos.
- Las fallas sólo afectan a una porción del archivo.


* Parquet

- El esquema está separado de los datos (como en =Avro=)
  - Pero está puesto en el /footer/
- Orientado a Columna
- Compresión integrada y con índices
- Diseñado para proveer procesamiento eficiente a través de varios compoentes de hadoop.
- Proveé excelentes capacidades de compresión.
- Soporta estructuras de datos complejas y anidadas.
- Puede escribirse y leerse con las APIs de Avro y con esquemas de Avro.
- No son tan buenos para recuperarse de errores.

* Formatos de compresión

- Ayuda a reducir los requerimientos de almacenamiento
- Mejora el procesamiento de los datos
  - Disminuye ,a cantidad de I/O en disco y red.
- Para aprovechar las capacidades de procesamiento en paralelo de Hadoop es preferible que el formato sea divisible.


* Formatos de compresión: =bzip2=
  - Excelente factor  de compresión
  - Pero muuuuuy lento en compresión/decompresión
  - Divisible

* Formatos de compresión:   =snappy=
  - Proyecto de Google.
  - No es divisible, pero muy eficiente en compresión/decompresión.
  - Se debe de usar con un formato de archivo que provea la capacidad de contenedor (=Avro=, =SequenceFiles=).


* Formatos de compresión: =gzip=
  - No es divisible
  - Buen factor de comrpesión: 2.5x lo de =snappy=.
  - Se debe de usar con un formato de archivo que provea la capacidad de contenedor (=Avro=, =SequenceFiles=).

* Formatos de compresión: =lzop=
  - Parecido a =snappy= en eficiencia de compresión/decompresión.
  - Divisible, pero requiere una etapa de indexado.
  - Buena elección para guardar archivos de texto planos que no se pondrán dentro de un contenedor.
  - Licenciamiento raro (No viene incluido con Hadoop).



* COMMENT Settings
# Local Variables:
# org-babel-sh-command: "/bin/bash"
# org-confirm-babel-evaluate: nil
# org-export-babel-evaluate: nil
# ispell-check-comments: exclusive
# ispell-local-dictionary: "british"
# End:
